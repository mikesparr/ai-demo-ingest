steps:
  # Display CI Go version
  - id: 'version'
    name: "gcr.io/cloud-builders/go"
    args: ["version"]
    env: ["GOPATH=."]
    
  # Run linter on code
  - id: 'lint'
    name: "golangci/golangci-lint"
    args: ["golangci-lint","run"]

  # Run any tests
  - id: 'test'
    name: "gcr.io/cloud-builders/go"
    args: ["test"]
    env: ["GOPATH=."]
  
  # Check code for security issues
  - id: 'security'
    name: "securego/gosec"
    args: ["helloworld"]
    env: ["GOPATH=."]

  # Build the container image
  - id: 'build'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA', '.']

  # Push the container image to Container Registry
  - id: 'push'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA']

  # Deploy container image to Cloud Run
  - id: 'deploy'
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
    - 'run'
    - 'deploy'
    - '$_SERVICE_NAME'
    - '--image'
    - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA'
    - '--region'
    - '$_GCP_REGION'
    - '--platform'
    - 'managed'
    - '--allow-unauthenticated'
    - '--vpc-connector'
    - '$_VPC_CONN'
    - '--update-env-vars'
    - 'PROJECT_ID=$PROJECT_ID,TOPIC_ID=$_TOPIC_ID,REDISHOST=$_REDISHOST,REDISPORT=$_REDISPORT'

images:
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$SHORT_SHA'
